name: Build Docker container & Push to DockerHub Registry

on:
  workflow_call:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test_app:
    uses: karol-bekieszczuk/errander/.github/workflows/test-app.yaml@main
    secrets:
      LINODE_BUCKET_ACCESS_KEY: ${{ secrets.LINODE_BUCKET_TEST_ACCESS_KEY }}
      LINODE_BUCKET_SECRET_KEY: ${{ secrets.LINODE_BUCKET_TEST_SECRET_KEY }}
  docker_build:
    runs-on: ubuntu-latest
    needs: [test_app]
    env:
      PROJECT_NAME: errander
      LINODE_BUCKET_ACCESS_KEY: ${{ secrets.LINODE_BUCKET_ACCESS_KEY }}
      LINODE_BUCKET_SECRET_KEY: ${{ secrets.LINODE_BUCKET_SECRET_KEY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: web
          file: ./web/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.PROJECT_NAME }}:latest, ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.PROJECT_NAME }}:${{ github.sha }}
          cache-from: |
      - name: Install and configure kubectl
        uses: tale/kubectl-action@v1
        with:
          base64-kube-config: ${{ secrets.KUBECONFIG }}
          kubectl-version: v1.27.1
      - name: Update deployment secrets
        run: |
          echo "${{ secrets.ENV_PROD_FILE }}" > web/.env.prod
          kubectl delete secret ${{ env.PROJECT_NAME }}-web-prod-env
          kubectl create secret generic ${{ env.PROJECT_NAME }}-web-prod-env --from-env-file=web/.env.prod
      - name: Update and restart Deployment
        run: | 
          kubectl apply -f k8s/apps/${{ env.PROJECT_NAME }}.yaml
          kubectl set image deployment/${{ env.PROJECT_NAME }}-deployment ${{ env.PROJECT_NAME }}=${{ secrets.DOCKERHUB_USERNAME }}/${{ env.PROJECT_NAME }}:${{ github.sha }}
          kubectl rollout restart deployment/${{ env.PROJECT_NAME }}-deployment
      - name: Wait for rollout restart to finish
        run: kubectl rollout status deployment/${{ env.PROJECT_NAME }}-deployment
      - name: Migrate database
        run: |
          export SINGLE_POD_NAME=$(kubectl get pod -l app=${{ env.PROJECT_NAME }}-deployment -o jsonpath="{.items[0].metadata.name}")
          kubectl exec -it $SINGLE_POD_NAME -- bash /web/scripts/production/migrate.sh
          kubectl exec -it $SINGLE_POD_NAME -- bash /web/scripts/production/collectstatic.sh